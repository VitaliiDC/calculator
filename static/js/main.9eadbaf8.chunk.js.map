{"version":3,"sources":["logo.svg","api/api.js","redux/calculatorReducer.js","redux/store.js","tools/validation.js","components/header/header.jsx","components/header/headerContainer.jsx","tools/forms.jsx","tools/preloader.jsx","components/calculator/calculator.jsx","components/calculator/calculatorContainer.jsx","components/text/text.jsx","components/text/textContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","api","getDollar","axios","get","then","responce","data","sale","initialState","dollar","inputValue","result","did","loading","setInputValue","value","type","setResult","setDid","setLoading","calculatorReducer","state","action","reducers","combineReducers","calculator","form","formReducer","store","createStore","applyMiddleware","thunkMiddleWare","window","length","Header","props","className","to","connect","Input","input","meta","touched","error","didTouch","PreLoader","maxLength13","reduxForm","onSubmit","handleSubmit","Field","component","validate","name","placeholder","htmlFor","mapDispatchToProps","getDollarThunk","dispatch","a","Number","toFixed","Text","AppContainer","compose","withRouter","exact","render","path","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,kUCM5BC,EAJH,CACXC,UADW,WACC,OAAOC,IAAMC,IAAN,oEAA8EC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAK,GAAGC,UCDhIC,EAAe,CAClBC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,KAAK,EACLC,SAAS,GAqBGC,EAAgB,SAACC,GAAD,MAAY,CAACC,KAAM,gBAAiBD,UACpDE,EAAY,SAACF,GAAD,MAAY,CAACC,KAAM,YAAaD,UAC5CG,EAAS,SAACH,GAAD,MAAY,CAACC,KAAM,SAAUD,UACtCI,EAAa,SAACJ,GAAD,MAAY,CAACC,KAAM,aAAcD,UAgB5CK,EArCW,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCAC3D,OAAOA,EAAON,MACb,IAAK,YACJ,OAAO,2BAAIK,GAAX,IAAkBZ,OAAQa,EAAOP,QAClC,IAAK,gBACJ,OAAO,2BAAIM,GAAX,IAAkBX,WAAYY,EAAOP,QACtC,IAAK,YACJ,OAAO,2BAAIM,GAAX,IAAkBV,OAAQW,EAAOP,QAClC,IAAK,SACJ,OAAO,2BAAIM,GAAX,IAAkBT,IAAKU,EAAOP,QAC/B,IAAK,aACJ,OAAO,2BAAIM,GAAX,IAAkBR,QAASS,EAAOP,QACnC,QACC,OAAOM,I,SClBJE,EAAWC,YAAgB,CAChCC,WAAYL,EACZM,KAAMC,MAGDC,EAAQC,YAAYN,EAAUO,YAAgBC,MAEpDC,OAAOJ,MAAQA,EAEAA,ICVWK,EDUXL,IECAM,G,OAXA,SAACC,GACf,OACC,4BAAQC,UAAU,UACjB,yBAAKA,UAAU,mBACd,kBAAC,IAAD,CAASA,UAAU,eAAeC,GAAG,KAArC,sEACA,kBAAC,IAAD,CAASD,UAAU,eAAeC,GAAG,SAArC,8DCSWC,eARS,SAACjB,GACxB,MAAO,KAKmB,GAEZiB,EAdS,SAACH,GACxB,OACC,kBAAC,EAAWA,M,oCCHDI,G,OAAQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASN,EAAW,gCACjD,OACC,yBAAKC,UAAW,gBAAuBK,EAAKC,SAAWD,EAAKE,MAAQ,QAAU,KAC7E,2CAAWH,EAAWL,IACtB,8BAAOM,EAAKE,UHPFC,EAAW,SAAC7B,GACxB,IAAIA,EAAO,MAAO,wHIUJ8B,G,OARG,SAACV,GAClB,OACC,yBAAKC,UAAU,sBACd,yBAAKA,UAAU,eCAZU,GLFoBb,EKEI,GLFO,SAAClB,GACrC,GAAGA,EACF,OAAGA,EAAMkB,QAAUA,EAAe,kIAClC,IKeac,cAAU,CAACrB,KAAM,cAAjBqB,EAdI,SAACZ,GACnB,OACC,yBAAKC,UAAU,oBACbD,EAAMtB,SAAW,kBAAC,EAAD,MAClB,wBAAIuB,UAAU,SAAd,sEACA,0BAAMY,SAAUb,EAAMc,cACrB,kBAACC,EAAA,EAAD,CAAOlC,KAAK,SAASmC,UAAWZ,EAAOa,SAAU,CAACR,EAAUE,GAAcO,KAAK,QAAQC,YAAY,uDAClGnB,EAAMvB,KAAO,2BAAO2C,QAAQ,SAAQ,2BAAIpB,EAAMzB,WAAa,sBAA9C,gDAAkE,2BAAIyB,EAAM1B,OAAO,KAAnF,uBAAgG,2BAAI0B,EAAMxB,OAAO,MAC/H,+FCOE6C,EAAqB,CAACC,eRUE,SAAC/C,GAAD,8CAAgB,WAAOgD,GAAP,eAAAC,EAAA,0DAC1CjD,EAD0C,wBAE5CgD,EAASvC,GAAW,IAFwB,SAGvBnB,EAAIC,YAHmB,OAGxCI,EAHwC,OAI5CqD,EAVmC,CAAC1C,KAAM,YAAaD,MAUpC6C,OAAOvD,GAAUwD,QAAQ,KAC5CH,EAAS5C,EAAc8C,OAAOlD,KAC9BgD,EAASzC,GAAWP,EAAWL,GAAUwD,QAAQ,KACjDH,EAASxC,GAAO,IAChBwC,EAASvC,GAAW,IARwB,wBAU5CuC,EAASxC,GAAO,IAV4B,4CAAhB,uDQVcJ,gBAAeG,aAE5CqB,eAZS,SAACjB,GACxB,MAAO,CACNZ,OAAQY,EAAMI,WAAWhB,OACzBE,OAAQU,EAAMI,WAAWd,OACzBD,WAAYW,EAAMI,WAAWf,WAC7BE,IAAKS,EAAMI,WAAWb,IACtBC,QAASQ,EAAMI,WAAWZ,WAMY2C,EAAzBlB,EAnBa,SAACH,GAE5B,OACC,kBAAC,EAAD,eAAYa,SAAU,SAAA1C,GAAI,OAAI6B,EAAMsB,eAAenD,EAAKkC,SAAYL,OCIvD2B,G,OAXF,SAAC3B,GACb,OACC,yBAAKC,UAAU,cACd,wBAAIA,UAAU,SAAd,2GACA,yBAAKA,UAAU,cAAf,mZAC4E,6BAD5E,cAC4F,6BAD5F,mBCaYE,eARS,SAACjB,GACxB,MAAO,KAKmB,GAEZiB,EAdO,SAACH,GACtB,OACC,kBAAC,EAASA,MCgBZ,IAAM4B,EAAeC,YACnBC,IADmBD,EAZrB,WACE,OACE,yBAAK5B,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8B,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,OAAyBC,KAAK,MACzD,kBAAC,IAAD,CAAOD,OAAQ,kBAAM,kBAAC,EAAD,OAAmBC,KAAK,eAoBtCC,EAVC,SAAClC,GACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAACmC,EAAD,SCnBYO,QACW,cAA7BtC,OAAOuC,SAASC,UAEe,UAA7BxC,OAAOuC,SAASC,UAEhBxC,OAAOuC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OACL,kBAAC,EAAD,MACFQ,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdC,OAAM,SAAAvC,GACLwC,QAAQxC,MAAMA,EAAMyC,c","file":"static/js/main.9eadbaf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\r\n\r\nconst api = {\r\n\tgetDollar(){return axios.get(`https://api.privatbank.ua/p24api/pubinfo?json&exchange&coursid=5`).then(responce => responce.data[0].sale)},\r\n}\r\n\r\nexport default api;","import api from '../api/api.js';\r\n\r\nlet initialState = {\r\n\tdollar: 0,\r\n\tinputValue: 0,\r\n\tresult: 0,\r\n\tdid: false,\r\n\tloading: false,\r\n}\r\n\r\nconst calculatorReducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase 'setDollar':\r\n\t\t\treturn {...state, dollar: action.value}\r\n\t\tcase 'setInputValue':\r\n\t\t\treturn {...state, inputValue: action.value}\r\n\t\tcase 'setResult':\r\n\t\t\treturn {...state, result: action.value}\r\n\t\tcase 'setDid':\r\n\t\t\treturn {...state, did: action.value}\r\n\t\tcase 'setLoading':\r\n\t\t\treturn {...state, loading: action.value}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const setDollar = (value) => ({type: 'setDollar', value});\r\nexport const setInputValue = (value) => ({type: 'setInputValue', value});\r\nexport const setResult = (value) => ({type: 'setResult', value});\r\nexport const setDid = (value) => ({type: 'setDid', value});\r\nexport const setLoading = (value) => ({type: 'setLoading', value});\r\n\r\nexport const getDollarThunk = (inputValue) => async (dispatch) => {\r\n\tif(inputValue){\r\n\t\tdispatch(setLoading(true));\r\n\t\tlet responce = await api.getDollar();\r\n\t\tdispatch(setDollar(Number(responce).toFixed(2)));\r\n\t\tdispatch(setInputValue(Number(inputValue)));\r\n\t\tdispatch(setResult((inputValue/responce).toFixed(2)));\r\n\t\tdispatch(setDid(true));\r\n\t\tdispatch(setLoading(false));\r\n\t}else{\r\n\t\tdispatch(setDid(false));\r\n\t}\r\n}\r\n\r\nexport default calculatorReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport calculatorReducer from './calculatorReducer.js';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nconst reducers = combineReducers({\r\n\tcalculator: calculatorReducer,\r\n\tform: formReducer,\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","export const didTouch = (value) => {\r\n\tif(!value) return 'Это поле обязательное';\r\n\treturn undefined;\r\n}\r\nexport const maxLength = (length) => (value) => {\r\n\tif(value){\r\n\t\tif(value.length >= length) return 'Слишком много символов';\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport './header.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header__buttons\">\r\n\t\t\t\t<NavLink className=\"header__calc\" to=\"/\">Калькулятор</NavLink>\r\n\t\t\t\t<NavLink className=\"header__text\" to=\"/text\">Текстовая</NavLink>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from './header.jsx';\r\n\r\nconst HeaderContainer = (props) => {\r\n\treturn (\r\n\t\t<Header {...props} />\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport './forms.css';\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\treturn (\r\n\t\t<div className={\"form__input\" + ' ' + (meta.touched && meta.error ? 'error' : '')}>\r\n\t\t\t<input {...input} {...props} />\r\n\t\t\t<span>{meta.error}</span>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport \"./preloader.css\";\r\n\r\nconst PreLoader = (props) => {\r\n\treturn(\r\n\t\t<div className=\"loading__container\">\r\n\t\t\t<div className=\"loading\"></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PreLoader;\r\n","import React from 'react';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {Input} from '../../tools/forms.jsx';\r\nimport {didTouch, maxLength} from '../../tools/validation.js';\r\nimport PreLoader from '../../tools/preloader.jsx';\r\n\r\nconst maxLength13 = maxLength(13);\r\n\r\nconst Calculator = (props) => {\r\n\treturn (\r\n\t\t<div className=\"calculator block\">\r\n\t\t\t{props.loading && <PreLoader />}\r\n\t\t\t<h1 className=\"title\">Калькулятор</h1>\r\n\t\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t\t<Field type=\"number\" component={Input} validate={[didTouch, maxLength13]} name=\"input\" placeholder=\"Сумма, грн\" />\r\n\t\t\t\t{props.did && <label htmlFor=\"input\"><b>{props.inputValue + 'грн'}</b> по курсу <b>{props.dollar+'$'}</b> это <b>{props.result+'$'}</b></label>}\r\n\t\t\t\t<button>Посчитать</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default reduxForm({form: 'calculator'})(Calculator);","import React from 'react';\r\nimport './calculator.css';\r\nimport {connect} from 'react-redux';\r\nimport Calculator from './calculator.jsx';\r\nimport {getDollarThunk, setInputValue, setResult} from '../../redux/calculatorReducer.js';\r\n\r\nconst CalculatorContainer = (props) => {\r\n\r\n\treturn (\r\n\t\t<Calculator onSubmit={data => props.getDollarThunk(data.input)} {...props} />\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdollar: state.calculator.dollar,\r\n\t\tresult: state.calculator.result,\r\n\t\tinputValue: state.calculator.inputValue,\r\n\t\tdid: state.calculator.did,\r\n\t\tloading: state.calculator.loading,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {getDollarThunk, setInputValue, setResult};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculatorContainer);","import React from 'react';\r\n\r\nconst Text = (props) => {\r\n\treturn (\r\n\t\t<div className=\"text block\">\r\n\t\t\t<h1 className=\"title\">Текстовая страница</h1>\r\n\t\t\t<div className=\"text__text\">\r\n\t\t\t\tЭто простая текстовая страница для отображения параметров роута. Параметры:<br/>- id: xxxx <br/>- date: xxxx\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\nimport './text.css';\r\nimport {connect} from 'react-redux';\r\nimport Text from './text.jsx';\r\n\r\nconst TextContainer = (props) => {\r\n\treturn (\r\n\t\t<Text {...props} />\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\t\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextContainer);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter, withRouter, Route, Switch} from 'react-router-dom';\nimport store from './redux/store.js';\nimport HeaderContainer from './components/header/headerContainer.jsx';\nimport CalculatorContainer from './components/calculator/calculatorContainer.jsx';\nimport TextContainer from './components/text/textContainer.jsx';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <HeaderContainer />\n      <Switch>\n        <Route exact render={() => <CalculatorContainer />} path=\"/\" />\n        <Route render={() => <TextContainer />} path=\"/text\" />\n      </Switch>\n    </div>\n  );\n}\n\nconst AppContainer = compose(\n  withRouter,\n)(App);\n\nconst MainApp = (props) => {\n  return(\n    <BrowserRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default MainApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}